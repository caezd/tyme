{"version":3,"file":"tyme.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export const isElement = (v) => v && typeof v === \"object\" && v.nodeType === 1;\r\nexport const pad = (n, len = 2) => String(n).padStart(len, \"0\");\r\n","import { isElement as isEl, pad } from \"./utils.js\";\r\n/**\r\n * Tÿme — Normalisateur de dates pour Forumactif\r\n * API :\r\n *    Tyme('8 juin 2025').fromNow()\r\n *    Tyme('01/03/25, 10:48 pm').parseToFormat('YYYY-MM-DD HH:mm')\r\n *    new Tyme(element).parseToFormat('DD/MM/YYYY')\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format\r\n */\r\n\r\nfunction formatDate(date, fmt = \"YYYY-MM-DD HH:mm\") {\r\n    if (!(date instanceof Date) || isNaN(date)) return \"\";\r\n    const Y = date.getFullYear();\r\n    const M = date.getMonth() + 1;\r\n    const D = date.getDate();\r\n    const H24 = date.getHours();\r\n    const H12 = ((H24 + 11) % 12) + 1;\r\n    const m = date.getMinutes();\r\n    const s = date.getSeconds();\r\n    const ampm = H24 < 12 ? \"am\" : \"pm\";\r\n    return fmt\r\n        .replace(/YYYY/g, String(Y))\r\n        .replace(/YY/g, String(Y).slice(-2))\r\n        .replace(/MM/g, pad(M))\r\n        .replace(/M(?![a-zA-Z])/g, String(M))\r\n        .replace(/DD/g, pad(D))\r\n        .replace(/D(?![a-zA-Z])/g, String(D))\r\n        .replace(/HH/g, pad(H24))\r\n        .replace(/H(?![a-zA-Z])/g, String(H24))\r\n        .replace(/hh/g, pad(H12))\r\n        .replace(/h(?![a-zA-Z])/g, String(H12))\r\n        .replace(/mm/g, pad(m))\r\n        .replace(/m(?![a-zA-Z])/g, String(m))\r\n        .replace(/ss/g, pad(s))\r\n        .replace(/s(?![a-zA-Z])/g, String(s))\r\n        .replace(/A/g, ampm.toUpperCase())\r\n        .replace(/a/g, ampm);\r\n}\r\n\r\n// ---------- Relative time ----------\r\nconst RTF_CACHE = new Map();\r\nconst getRTF = (locale) => {\r\n    if (!RTF_CACHE.has(locale)) {\r\n        RTF_CACHE.set(\r\n            locale,\r\n            new Intl.RelativeTimeFormat(locale, { numeric: \"auto\" })\r\n        );\r\n    }\r\n    return RTF_CACHE.get(locale);\r\n};\r\n\r\nfunction fromNow(date, { locale = \"fr-CA\", now = () => new Date() } = {}) {\r\n    if (!(date instanceof Date) || isNaN(date)) return \"\";\r\n    const rtf = getRTF(locale);\r\n    const diffSec = Math.round((date.getTime() - now().getTime()) / 1000);\r\n    const abs = Math.abs(diffSec);\r\n    const MIN = 60,\r\n        H = 3600,\r\n        D = 86400,\r\n        W = 604800,\r\n        M = 2592000,\r\n        Y = 31536000;\r\n\r\n    if (abs < 45) return rtf.format(diffSec, \"second\");\r\n    if (abs < 90) return rtf.format(Math.round(diffSec / MIN), \"minute\");\r\n    if (abs < 45 * MIN) return rtf.format(Math.round(diffSec / MIN), \"minute\");\r\n    if (abs < 90 * MIN) return rtf.format(Math.round(diffSec / H), \"hour\");\r\n    if (abs < 22 * H) return rtf.format(Math.round(diffSec / H), \"hour\");\r\n    if (abs < 36 * H) return rtf.format(Math.round(diffSec / D), \"day\");\r\n    if (abs < 25 * D) return rtf.format(Math.round(diffSec / D), \"day\");\r\n    if (abs < 45 * D) return rtf.format(Math.round(diffSec / W), \"week\");\r\n    if (abs < 345 * D) return rtf.format(Math.round(diffSec / M), \"month\");\r\n    return rtf.format(Math.round(diffSec / Y), \"year\");\r\n}\r\n\r\n// ---------- Parsing (reprend TOUT + “date seule”) ----------\r\nfunction parseMonth(monthStr) {\r\n    const m = String(monthStr || \"\").toLowerCase();\r\n    const months = {\r\n        jan: 0,\r\n        january: 0,\r\n        janv: 0,\r\n        feb: 1,\r\n        february: 1,\r\n        févr: 1,\r\n        mar: 2,\r\n        march: 2,\r\n        mars: 2,\r\n        apr: 3,\r\n        april: 3,\r\n        avr: 3,\r\n        may: 4,\r\n        mai: 4,\r\n        jun: 5,\r\n        june: 5,\r\n        juin: 5,\r\n        jul: 6,\r\n        july: 6,\r\n        juil: 6,\r\n        aug: 7,\r\n        august: 7,\r\n        août: 7,\r\n        sep: 8,\r\n        sept: 8,\r\n        september: 8,\r\n        oct: 9,\r\n        october: 9,\r\n        nov: 10,\r\n        november: 10,\r\n        dec: 11,\r\n        december: 11,\r\n        déc: 11,\r\n        decembre: 11,\r\n    };\r\n    return months[m] ?? 0;\r\n}\r\n\r\nconst APOS = \"['’]\"; // apostrophe droite ou typographique\r\nconst AT = \"(?:a|à)\"; // tolère 'a' non accentué\r\nconst toInt = (x) => parseInt(x, 10);\r\nconst baseYMD = (offsetDays = 0) => {\r\n    const n = new Date();\r\n    n.setHours(0, 0, 0, 0);\r\n    n.setDate(n.getDate() + offsetDays);\r\n    return n;\r\n};\r\nconst withTime = (base, h, min, sec = 0, ap) => {\r\n    let H = toInt(h),\r\n        M = toInt(min),\r\n        S = sec ? toInt(sec) : 0;\r\n    if (ap) {\r\n        const ampm = ap.toLowerCase();\r\n        if (ampm === \"pm\" && H < 12) H += 12;\r\n        if (ampm === \"am\" && H === 12) H = 0;\r\n    }\r\n    base.setHours(H, M, S, 0);\r\n    return base;\r\n};\r\n\r\n// Tous les formats Forumactif + variantes “date seule”\r\nconst PATTERNS = [\r\n    // \"Aujourd'hui à 12:40\" / \"Aujourd’hui 12:40:33\" / AM/PM toléré\r\n    {\r\n        regex: new RegExp(\r\n            `^aujourd${APOS}hui\\\\s*(?:[, ]+)?\\\\s*(?:${AT})?\\\\s*(\\\\d{1,2}):(\\\\d{2})(?::(\\\\d{2}))?\\\\s*([ap]m)?$`,\r\n            \"i\"\r\n        ),\r\n        process: (m) => withTime(baseYMD(0), m[1], m[2], m[3], m[4]),\r\n    },\r\n    // \"Hier à 08:05\" / \"hier 8:05 pm\"\r\n    {\r\n        regex: new RegExp(\r\n            `^hier\\\\s*(?:[, ]+)?\\\\s*(?:${AT})?\\\\s*(\\\\d{1,2}):(\\\\d{2})(?::(\\\\d{2}))?\\\\s*([ap]m)?$`,\r\n            \"i\"\r\n        ),\r\n        process: (m) => withTime(baseYMD(-1), m[1], m[2], m[3], m[4]),\r\n    },\r\n    // (optionnels) sans heure → minuit\r\n    {\r\n        regex: new RegExp(`^aujourd${APOS}hui$`, \"i\"),\r\n        process: () => baseYMD(0),\r\n    },\r\n    { regex: /^hier$/i, process: () => baseYMD(-1) },\r\n    // D j M Y - G:i\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4})\\s*[-,]\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], parseMonth(m[2]), +m[1], +m[4], +m[5]),\r\n    },\r\n    // D j M - G:i  (année courante)\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s*[-,]\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) =>\r\n            new Date(\r\n                new Date().getFullYear(),\r\n                parseMonth(m[2]),\r\n                +m[1],\r\n                +m[3],\r\n                +m[4]\r\n            ),\r\n    },\r\n    // D j M Y - G:i:s\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4})\\s*[-,]\\s*(\\d{1,2}):(\\d{2}):(\\d{2})$/,\r\n        process: (m) =>\r\n            new Date(+m[3], parseMonth(m[2]), +m[1], +m[4], +m[5], +m[6]),\r\n    },\r\n    // D j M Y - H:i:s a\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4})\\s*[-,]\\s*(\\d{1,2}):(\\d{2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[7].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], parseMonth(m[2]), +m[1], h, +m[5], +m[6]);\r\n        },\r\n    },\r\n    // d.m.y G:i\r\n    {\r\n        regex: /^(\\d{2})\\.(\\d{2})\\.(\\d{2})\\s+(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => {\r\n            let yr = +m[3];\r\n            yr += yr < 50 ? 2000 : 1900;\r\n            return new Date(yr, +m[2] - 1, +m[1], +m[4], +m[5]);\r\n        },\r\n    },\r\n    // d/m/y, h:i a\r\n    {\r\n        regex: /^(\\d{2})\\/(\\d{2})\\/(\\d{2}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let yr = +m[3];\r\n            yr += yr < 50 ? 2000 : 1900;\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(yr, +m[2] - 1, +m[1], h, +m[5]);\r\n        },\r\n    },\r\n    // D d M Y, g:i a\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], parseMonth(m[2]), +m[1], h, +m[5]);\r\n        },\r\n    },\r\n    // D d M Y, H:i\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], parseMonth(m[2]), +m[1], +m[4], +m[5]),\r\n    },\r\n    // D M d, Y g:i a\r\n    {\r\n        regex: /^([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{1,2}),\\s*(\\d{4})\\s+(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], parseMonth(m[1]), +m[2], h, +m[5]);\r\n        },\r\n    },\r\n    // D M d Y, H:i\r\n    {\r\n        regex: /^([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{1,2})\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], parseMonth(m[1]), +m[2], +m[4], +m[5]),\r\n    },\r\n    // jS F Y, g:i a\r\n    {\r\n        regex: /^(\\d{1,2})\\s+[a-z]{2}\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], parseMonth(m[2]), +m[1], h, +m[5]);\r\n        },\r\n    },\r\n    // jS F Y, H:i\r\n    {\r\n        regex: /^(\\d{1,2})\\s+[a-z]{2}\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], parseMonth(m[2]), +m[1], +m[4], +m[5]),\r\n    },\r\n    // F jS Y, g:i a\r\n    {\r\n        regex: /^([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{1,2})\\s*[a-z]{2}\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], parseMonth(m[1]), +m[2], h, +m[5]);\r\n        },\r\n    },\r\n    // F jS Y, H:i\r\n    {\r\n        regex: /^([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{1,2})\\s*[a-z]{2}\\s+(\\d{4}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], parseMonth(m[1]), +m[2], +m[4], +m[5]),\r\n    },\r\n    // j/n/Y, g:i a\r\n    {\r\n        regex: /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], +m[2] - 1, +m[1], h, +m[5]);\r\n        },\r\n    },\r\n    // j/n/Y, H:i\r\n    {\r\n        regex: /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], +m[2] - 1, +m[1], +m[4], +m[5]),\r\n    },\r\n    // n/j/Y, g:i a\r\n    {\r\n        regex: /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[3], +m[1] - 1, +m[2], h, +m[5]);\r\n        },\r\n    },\r\n    // n/j/Y, H:i\r\n    {\r\n        regex: /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[3], +m[1] - 1, +m[2], +m[4], +m[5]),\r\n    },\r\n    // Y-m-d, g:i a\r\n    {\r\n        regex: /^(\\d{4})-(\\d{1,2})-(\\d{1,2}),\\s*(\\d{1,2}):(\\d{2})\\s*([ap]m)$/i,\r\n        process: (m) => {\r\n            let h = +m[4];\r\n            const ap = m[6].toLowerCase();\r\n            if (ap === \"pm\" && h < 12) h += 12;\r\n            if (ap === \"am\" && h === 12) h = 0;\r\n            return new Date(+m[1], +m[2] - 1, +m[3], h, +m[5]);\r\n        },\r\n    },\r\n    // Y-m-d, H:i\r\n    {\r\n        regex: /^(\\d{4})-(\\d{1,2})-(\\d{1,2}),\\s*(\\d{1,2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[1], +m[2] - 1, +m[3], +m[4], +m[5]),\r\n    },\r\n    // Y-m-d, H:i:s\r\n    {\r\n        regex: /^(\\d{4})-(\\d{1,2})-(\\d{1,2}),\\s*(\\d{1,2}):(\\d{2}):(\\d{2})$/,\r\n        process: (m) => new Date(+m[1], +m[2] - 1, +m[3], +m[4], +m[5], +m[6]),\r\n    },\r\n\r\n    // ---- Ajouts “date seule” (sans heure) :\r\n    // j M Y    => \"8 juin 2025\"\r\n    {\r\n        regex: /^(\\d{1,2})\\s+([A-Za-zéûÀ-ÖØ-öø-ÿ]+)\\s+(\\d{4})$/,\r\n        process: (m) => new Date(+m[3], parseMonth(m[2]), +m[1], 0, 0, 0, 0),\r\n    },\r\n    // Y-m-d    => \"2025-06-08\"\r\n    {\r\n        regex: /^(\\d{4})-(\\d{1,2})-(\\d{1,2})$/,\r\n        process: (m) => new Date(+m[1], +m[2] - 1, +m[3], 0, 0, 0, 0),\r\n    },\r\n    // d.m.y    => \"08.06.25\"\r\n    {\r\n        regex: /^(\\d{2})\\.(\\d{2})\\.(\\d{2})$/,\r\n        process: (m) => {\r\n            let yr = +m[3];\r\n            yr += yr < 50 ? 2000 : 1900;\r\n            return new Date(yr, +m[2] - 1, +m[1], 0, 0, 0, 0);\r\n        },\r\n    },\r\n    // d/m/Y    => \"08/06/2025\"\r\n    {\r\n        regex: /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/,\r\n        process: (m) => new Date(+m[3], +m[2] - 1, +m[1], 0, 0, 0, 0),\r\n    },\r\n    // n/j/Y    => \"6/8/2025\"\r\n    {\r\n        regex: /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/,\r\n        process: (m) => new Date(+m[3], +m[1] - 1, +m[2], 0, 0, 0, 0),\r\n    },\r\n];\r\n\r\nfunction preClean(str) {\r\n    return String(str || \"\")\r\n        .trim()\r\n        .replace(\r\n            /^(?:(?:lun(?:di)?|mar(?:di)?|mer(?:credi)?|jeu(?:di)?|ven(?:dredi)?|sam(?:edi)?|dim(?:anche)?|mon(?:day)?|tue(?:sday)?|wed(?:nesday)?|thu(?:rsday)?|fri(?:day)?|sat(?:urday)?|sun(?:day)?)[\\.,]?\\s+)/i,\r\n            \"\"\r\n        )\r\n        .replace(/(\\d+)(st|nd|rd|th)/gi, \"$1\");\r\n}\r\n\r\nfunction parseInput(input) {\r\n    if (input instanceof Date) return input;\r\n    const raw =\r\n        typeof input === \"string\"\r\n            ? input\r\n            : isEl(input)\r\n            ? input.textContent || \"\"\r\n            : String(input ?? \"\");\r\n    const s = preClean(raw);\r\n    for (const { regex, process } of PATTERNS) {\r\n        const m = s.match(regex);\r\n        if (m) {\r\n            const d = process(m);\r\n            if (d instanceof Date && !isNaN(d)) return d;\r\n        }\r\n    }\r\n    // fallback permissif\r\n    const d2 = new Date(s);\r\n    return isNaN(d2) ? new Date(NaN) : d2;\r\n}\r\n\r\nfunction makeFacade(date, opts = {}) {\r\n    return {\r\n        parseToFormat: (fmt) => formatDate(date, fmt),\r\n        fromNow: () => fromNow(date, opts),\r\n    };\r\n}\r\n\r\n// ---------- API principale ----------\r\nfunction Tyme(input, opts = {}) {\r\n    if (!(this instanceof Tyme)) {\r\n        return makeFacade(parseInput(input), opts);\r\n    }\r\n    const fac = makeFacade(parseInput(input), opts);\r\n    this.parseToFormat = fac.parseToFormat;\r\n    this.fromNow = fac.fromNow;\r\n}\r\n\r\nTyme.parse = parseInput;\r\nTyme.format = formatDate; // utilitaire si besoin\r\nTyme.fromNow = (input, opts) => fromNow(parseInput(input), opts);\r\n\r\nexport default Tyme;\r\n"],"names":["pad","n","len","String","padStart","formatDate","date","fmt","Date","isNaN","Y","getFullYear","M","getMonth","D","getDate","H24","getHours","H12","m","getMinutes","s","getSeconds","ampm","replace","slice","toUpperCase","RTF_CACHE","Map","fromNow","locale","now","rtf","has","set","Intl","RelativeTimeFormat","numeric","get","getRTF","diffSec","Math","round","getTime","abs","H","format","parseMonth","monthStr","jan","january","janv","feb","february","mar","march","mars","apr","april","avr","may","mai","jun","june","juin","jul","july","juil","aug","august","sep","sept","september","oct","october","nov","november","dec","december","decembre","toLowerCase","APOS","AT","toInt","x","parseInt","baseYMD","offsetDays","setHours","setDate","withTime","base","h","min","sec","ap","S","PATTERNS","regex","RegExp","process","yr","parseInput","input","raw","v","nodeType","textContent","trim","match","d","d2","NaN","makeFacade","opts","parseToFormat","Tyme","this","fac","parse"],"mappings":"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"}